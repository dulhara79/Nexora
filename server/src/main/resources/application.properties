spring.application.name=server

# server configurations
server.port=${PORT:8080}

# mongodb configurations
spring.data.mongodb.uri=${MONGODB_URI}

# Firebase Configurations
cloudinary.cloud-name=${CLOUDINARY_CLOUD_NAME}
cloudinary.api-key=${CLOUDINARY_API_KEY}
cloudinary.api-secret=${CLOUDINARY_API_SECRET}

# File Upload Configurations
spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=2KB
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# JWT Configurations
jwt.secret=${JWT_SECRET}
jwt.expiration=86400000

# Google OAuth2 Configurations
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=email,profile

# Google OAuth2 Provider Configurations
spring.security.oauth2.client.provider.google.authorization-uri=${GOOGLE_AUTHORIZATION_URI}
spring.security.oauth2.client.provider.google.token-uri=${GOOGLE_TOKEN_URI}
spring.security.oauth2.client.provider.google.user-info-uri=${GOOGLE_USER_INFO_URI}
# spring.security.oauth2.client.provider.google.user-name-attribuhttp://localhost:5000/login/oauth2/code/google
spring.security.oauth2.client.provider.google.user-name-attribute=name

# Email Configurations
spring.mail.host=${EMAIL_HOST}
spring.mail.port=${EMAIL_PORT}
spring.mail.username=${EMAIL_USERNAME}
spring.mail.password=${EMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Session Configurations with Redis
server.servlet.session.timeout=1800
spring.session.store-type=redis
spring.redis.host=localhost
spring.redis.port=6379
spring.session.redis.namespace=spring:session